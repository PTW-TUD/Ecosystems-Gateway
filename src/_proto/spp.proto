/*
Copyright 2021-2022 Stefan Dumss, MIVP TU Wien
*/

syntax = "proto3";

import "google/protobuf/struct.proto";

package eupg.serviceofferingpublisher;

option go_package = "serviceofferingpublisher/pb";

message CreateOfferingRequest{
    Main main = 2;
    AdditionalInformation additionalInformation = 3;
    string token = 4;
    string name = 5;
}

message UpdateOfferingRequest {
    string did = 1;
    Main main = 2;
    AdditionalInformation additionalInformation = 3;
    string token = 4;
    string name = 5;
    optional PublishInfo publishInfo = 6;
}

message PublishInfo{
    string source = 1;
    google.protobuf.Struct data = 2;
}

message Main{
    string type = 1;
    string author = 3;
    string licence = 4;
    string dateCreated = 5;
    repeated Files files = 6;
    repeated string tags = 7;
    string description = 8;
    repeated Algorithm allowedAlgorithm = 9;
}

message AdditionalInformation{
    string description = 1;
    ServiceSelfDescription serviceSelfDescription = 3;
    bool termsAndConditions = 4;
    gaiaX gaiaXInformation = 5;
}

message Files{
    string url  =1;
    int32 indest = 2;
    string contentType = 3;
    string method = 4;
    int32 index = 5;
}

message Algorithm{
    string did = 1;
    string filesChecksum = 2;
    string containerSectionChecksum = 3;
}

message ServiceSelfDescription{
    string url = 1;
    bool isVerified = 2;
}

message gaiaX{
    bool containsPII = 1;
    repeated Terms termsAndConditions = 2;
    ServiceSelfDescription serviceSD = 3;
}

message Terms{
    string url = 1;
}

message StatusResponse{
    int32 statusCode = 1;
    string simpleMessage = 2;
    optional Result data = 4;
    google.protobuf.Struct DebugInformation = 3;
}

message Result{
    string did = 1;
    string serviceId = 2;
}


service serviceofferingPublisher{
    rpc CreateOffering(CreateOfferingRequest) returns (StatusResponse){}
    rpc UpdateOffering(UpdateOfferingRequest) returns (StatusResponse){}
}
